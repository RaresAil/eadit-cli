import { Inject, Responder } from '@adr-express-ts/core';
import { Token } from 'oauth2-server';
import { Response } from 'express';

import { cookieOptions, createJWT } from '../auth/utils';

@Inject
@Responder('OAuth')
export default class OAuthResponder {
  public successLogin(res: Response) {
    const token = res.locals?.oauth?.token as Token;
    const tokenExpireDate = token?.accessTokenExpiresAt?.getTime() ?? 0;
    const expireIn = tokenExpireDate - Date.now();

    if (tokenExpireDate <= 0 || expireIn <= 0) {
      return res
        .status(401)
        .cookie('cookie-name', '', cookieOptions(-3600))
        .json({
          success: false
        });
    }

    return res
      .cookie(
        'cookie-name',
        createJWT(
          {
            token: token.accessToken,
            client: token.client.id,
            user: token.user.id,
            id: token.id
          },
          expireIn
        ),
        cookieOptions(expireIn)
      )
      .status(201)
      .json({
        success: true
      });
  }
}
